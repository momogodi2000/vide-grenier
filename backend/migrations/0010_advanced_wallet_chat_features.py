# Generated by Django 5.2.4 on 2025-07-25 15:02

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0009_alter_user_username'),
    ]

    operations = [
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('CREDIT', 'Cr√©dit'), ('DEBIT', 'D√©bit'), ('COMMISSION', 'Commission'), ('REFUND', 'Remboursement'), ('WITHDRAWAL', 'Retrait'), ('DEPOSIT', 'D√©p√¥t')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('description', models.TextField()),
                ('source', models.CharField(choices=[('SALE', 'Vente'), ('PURCHASE', 'Achat'), ('COMMISSION', 'Commission'), ('ADMIN_CREDIT', 'Cr√©dit Admin'), ('ADMIN_DEBIT', 'D√©bit Admin'), ('REFUND', 'Remboursement'), ('WITHDRAWAL', 'Retrait'), ('DEPOSIT', 'D√©p√¥t')], default='ADMIN_CREDIT', max_length=20)),
                ('reference_id', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('PENDING', 'En attente'), ('PROCESSING', 'En traitement'), ('COMPLETED', 'Compl√©t√©'), ('FAILED', '√âchou√©'), ('CANCELLED', 'Annul√©')], default='PENDING', max_length=20)),
                ('metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'db_table': 'transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_preference', models.CharField(choices=[('ALL', 'Toutes les notifications'), ('MENTIONS_ONLY', 'Mentions uniquement'), ('NONE', 'Aucune notification')], default='ALL', max_length=20)),
                ('email_notifications', models.BooleanField(default=True)),
                ('show_online_status', models.BooleanField(default=True)),
                ('auto_delete_messages_days', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('blocked_users', models.ManyToManyField(blank=True, related_name='blocked_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='chat_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Param√®tres de chat',
                'verbose_name_plural': 'Param√®tres de chat',
                'db_table': 'chat_settings',
            },
        ),
        migrations.CreateModel(
            name='PrivateChat',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chat_type', models.CharField(choices=[('CLIENT_ADMIN', 'Client-Admin'), ('STAFF_ADMIN', 'Staff-Admin'), ('CLIENT_CLIENT', 'Client-Client')], max_length=20)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('initiated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initiated_private_chats', to=settings.AUTH_USER_MODEL)),
                ('participant_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='private_chats_as_p1', to=settings.AUTH_USER_MODEL)),
                ('participant_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='private_chats_as_p2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'private_chats',
                'ordering': ['-last_message_at', '-updated_at'],
                'unique_together': {('participant_1', 'participant_2', 'chat_type')},
            },
        ),
        migrations.CreateModel(
            name='OnlineStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('ONLINE', 'En ligne'), ('AWAY', 'Absent'), ('BUSY', 'Occup√©'), ('OFFLINE', 'Hors ligne')], default='OFFLINE', max_length=10)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('is_typing', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('current_group_chat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_users', to='backend.groupchat')),
                ('typing_in_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='typing_users', to='backend.groupchat')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='online_status', to=settings.AUTH_USER_MODEL)),
                ('current_chat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_users', to='backend.privatechat')),
                ('typing_in_chat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='typing_users', to='backend.privatechat')),
            ],
            options={
                'verbose_name': 'Statut en ligne',
                'verbose_name_plural': 'Statuts en ligne',
                'db_table': 'online_statuses',
            },
        ),
        migrations.CreateModel(
            name='PrivateMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('TEXT', 'Texte'), ('IMAGE', 'Image'), ('FILE', 'Fichier'), ('SYSTEM', 'Message syst√®me'), ('VOICE', 'Message vocal')], default='TEXT', max_length=10)),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='chat/private_images/')),
                ('file', models.FileField(blank=True, null=True, upload_to='chat/private_files/')),
                ('voice_note', models.FileField(blank=True, null=True, upload_to='chat/voice_notes/')),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('private_chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='private_messages', to='backend.privatechat')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_private_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'private_messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageReaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reaction_type', models.CharField(choices=[('LIKE', 'üëç'), ('LOVE', '‚ù§Ô∏è'), ('LAUGH', 'üòÇ'), ('WOW', 'üòÆ'), ('ANGRY', 'üò†'), ('SAD', 'üò¢')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('group_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='backend.groupchatmessage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_reactions', to=settings.AUTH_USER_MODEL)),
                ('private_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='backend.privatemessage')),
            ],
            options={
                'db_table': 'message_reactions',
            },
        ),
        migrations.CreateModel(
            name='Commission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('commission_type', models.CharField(choices=[('SALE', 'Commission sur vente'), ('SERVICE', 'Frais de service'), ('PENALTY', 'P√©nalit√©')], default='SALE', max_length=20)),
                ('base_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('commission_rate', models.DecimalField(decimal_places=4, default=Decimal('0.1000'), max_digits=5)),
                ('commission_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('seller_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('is_paid', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='commission_record', to='backend.order')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commissions_paid', to=settings.AUTH_USER_MODEL)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.transaction')),
            ],
            options={
                'verbose_name': 'Commission',
                'verbose_name_plural': 'Commissions',
                'db_table': 'commissions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('pending_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_earned', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_spent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('is_frozen', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Portefeuille',
                'verbose_name_plural': 'Portefeuilles',
                'db_table': 'wallets',
            },
        ),
        migrations.AddField(
            model_name='transaction',
            name='wallet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='backend.wallet'),
        ),
        migrations.CreateModel(
            name='WithdrawalRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('withdrawal_method', models.CharField(choices=[('MOBILE_MONEY', 'Mobile Money'), ('BANK_TRANSFER', 'Virement bancaire'), ('CASH_PICKUP', 'Retrait en esp√®ces')], max_length=20)),
                ('account_details', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('PENDING', 'En attente'), ('APPROVED', 'Approuv√©'), ('PROCESSING', 'En traitement'), ('COMPLETED', 'Compl√©t√©'), ('REJECTED', 'Rejet√©'), ('CANCELLED', 'Annul√©')], default='PENDING', max_length=20)),
                ('admin_notes', models.TextField(blank=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_withdrawals', to=settings.AUTH_USER_MODEL)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawal_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Demande de retrait',
                'verbose_name_plural': 'Demandes de retrait',
                'db_table': 'withdrawal_requests',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupChatParticipant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('ADMIN', 'Administrateur'), ('MODERATOR', 'Mod√©rateur'), ('MEMBER', 'Membre')], default='MEMBER', max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Actif'), ('MUTED', 'Silencieux'), ('BANNED', 'Banni'), ('LEFT', 'Parti')], default='ACTIVE', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_read_at', models.DateTimeField(blank=True, null=True)),
                ('muted_until', models.DateTimeField(blank=True, null=True)),
                ('group_chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participant_details', to='backend.groupchat')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_participations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'group_chat_participants',
                'indexes': [models.Index(fields=['group_chat', 'status'], name='group_chat__group_c_8e5b63_idx'), models.Index(fields=['user', 'status'], name='group_chat__user_id_32aa40_idx')],
                'unique_together': {('group_chat', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='privatemessage',
            index=models.Index(fields=['private_chat', 'created_at'], name='private_mes_private_4377ca_idx'),
        ),
        migrations.AddIndex(
            model_name='privatemessage',
            index=models.Index(fields=['sender', 'is_read'], name='private_mes_sender__ece9c2_idx'),
        ),
        migrations.AddIndex(
            model_name='messagereaction',
            index=models.Index(fields=['private_message', 'reaction_type'], name='message_rea_private_4dfa35_idx'),
        ),
        migrations.AddIndex(
            model_name='messagereaction',
            index=models.Index(fields=['group_message', 'reaction_type'], name='message_rea_group_m_35478c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='messagereaction',
            unique_together={('user', 'group_message'), ('user', 'private_message')},
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['wallet', 'status'], name='transaction_wallet__127b5c_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_type', 'created_at'], name='transaction_transac_6dc4cd_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['reference_id'], name='transaction_referen_897c8a_idx'),
        ),
    ]
